# Generated by Django 5.2.5 on 2025-08-22 13:16

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import gestion.models
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AnneeScolaire',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('annee', models.CharField(max_length=9, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Classe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Option',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Parent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=50)),
                ('telephone', models.CharField(max_length=20, unique=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('adresse', models.TextField(blank=True, null=True)),
                ('profession', models.CharField(blank=True, max_length=100, null=True)),
                ('relation', models.CharField(choices=[('Père', 'Père'), ('Mère', 'Mère'), ('Tuteur', 'Tuteur')], max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=50, unique=True)),
                ('type_section', models.CharField(choices=[('maternelle', 'maternelle'), ('primaire', 'primaire'), ('secondaire', 'secondaire'), ('itm', 'ITM'), ('humanite', 'Humanités')], default='itm', max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('admin', 'Administrateur'), ('directeur', 'Directeur'), ('prefet', 'Préfet'), ('prefet_itm', 'Préfet ITM'), ('directeur_financier', 'Directeur Financier'), ('prefet_financier', 'Prefet Financier'), ('ITM_financier', 'ITM Financier')], default='admin', max_length=20)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'permissions': [('can_manage_maternelle_primaire', 'Peut gérer Maternelle & Primaire'), ('can_manage_secondaire_humanites', 'Peut gérer Secondaire & Humanités'), ('can_manage_itm', 'Peut gérer ITM'), ('can_manage_finances', 'Peut gérer les finances')],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Eleve',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=50)),
                ('post_nom', models.CharField(max_length=50)),
                ('prenom', models.CharField(blank=True, max_length=50, null=True)),
                ('sexe', models.CharField(choices=[('M', 'Masculin'), ('F', 'Féminin')], max_length=1)),
                ('date_naissance', models.DateField()),
                ('lieu_naissance', models.CharField(max_length=100)),
                ('matricule', models.CharField(max_length=20, unique=True)),
                ('annee_scolaire', models.ForeignKey(default=gestion.models.get_default_annee_scolaire, editable=False, on_delete=django.db.models.deletion.CASCADE, to='gestion.anneescolaire')),
                ('classe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestion.classe')),
                ('option', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='gestion.option')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='eleves', to='gestion.parent')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestion.section')),
            ],
        ),
        migrations.CreateModel(
            name='HistoriqueAction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(blank=True, help_text="Nom d'utilisateur au moment de l'action", max_length=150, null=True)),
                ('modele', models.CharField(max_length=100, verbose_name='Modèle')),
                ('objet_id', models.PositiveIntegerField(blank=True, null=True, verbose_name='ID Objet')),
                ('action', models.CharField(choices=[('Création', 'Création'), ('Modification', 'Modification'), ('Suppression', 'Suppression')], max_length=20, verbose_name='Action')),
                ('details', models.TextField(blank=True, verbose_name='Détails')),
                ('date_action', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Date')),
                ('utilisateur', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur')),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('est_lue', models.BooleanField(default=False)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('historique_action', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestion.historiqueaction')),
                ('utilisateur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Frais',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=255)),
                ('montant', models.DecimalField(decimal_places=2, max_digits=10)),
                ('type_frais', models.CharField(choices=[('Mensuel', 'Mensuel'), ('Trimestriel', 'Trimestriel'), ('Annuel', 'Annuel'), ('Occasionnel', 'Occasionnel')], max_length=20)),
                ('mois', models.CharField(blank=True, max_length=20, null=True)),
                ('tranche', models.CharField(blank=True, choices=[('1ère Tranche', '1ère Tranche'), ('2ème Tranche', '2ème Tranche'), ('3ème Tranche', '3ème Tranche')], max_length=50, null=True)),
                ('annee_scolaire', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestion.anneescolaire')),
                ('classes', models.ManyToManyField(blank=True, related_name='frais', to='gestion.classe')),
                ('option', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='frais', to='gestion.option')),
                ('section', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='frais', to='gestion.section')),
            ],
        ),
        migrations.AddField(
            model_name='classe',
            name='option',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='classes', to='gestion.option'),
        ),
        migrations.CreateModel(
            name='Paiement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mois', models.CharField(blank=True, choices=[('Septembre', 'Septembre'), ('Octobre', 'Octobre'), ('Novembre', 'Novembre'), ('Décembre', 'Décembre'), ('Janvier', 'Janvier'), ('Février', 'Février'), ('Mars', 'Mars'), ('Avril', 'Avril'), ('Mai', 'Mai'), ('Juin', 'Juin')], max_length=255, null=True)),
                ('tranche', models.CharField(blank=True, choices=[('1ère Tranche', '1ère Tranche'), ('2ème Tranche', '2ème Tranche'), ('3ème Tranche', '3ème Tranche')], max_length=50, null=True)),
                ('montant_paye', models.DecimalField(decimal_places=2, max_digits=10)),
                ('solde_restant', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('date_paiement', models.DateField(auto_now_add=True)),
                ('recu_numero', models.CharField(max_length=255, unique=True)),
                ('annee_scolaire', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestion.anneescolaire', verbose_name='Année Scolaire')),
                ('eleve', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestion.eleve')),
                ('frais', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestion.frais')),
            ],
        ),
        migrations.AddField(
            model_name='option',
            name='section',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='options', to='gestion.section'),
        ),
        migrations.CreateModel(
            name='Depense',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('motif', models.CharField(max_length=255)),
                ('montant', models.DecimalField(decimal_places=2, max_digits=10)),
                ('date_depense', models.DateField(auto_now_add=True)),
                ('annee_scolaire', models.ForeignKey(blank=True, help_text='Année scolaire associée à la dépense', null=True, on_delete=django.db.models.deletion.CASCADE, to='gestion.anneescolaire')),
                ('section', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='gestion.section')),
            ],
        ),
        migrations.AddField(
            model_name='classe',
            name='section',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='classes', to='gestion.section'),
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('totp_secret', models.CharField(blank=True, max_length=100, null=True)),
                ('is_2fa_enabled', models.BooleanField(default=False)),
                ('session_key', models.CharField(blank=True, max_length=40, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Inscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_inscription', models.DateField(auto_now_add=True)),
                ('est_reinscription', models.BooleanField(default=False)),
                ('annee_scolaire', models.ForeignKey(db_column='annee_scolaire', on_delete=django.db.models.deletion.CASCADE, to='gestion.anneescolaire')),
                ('classe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestion.classe')),
                ('eleve', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inscriptions', to='gestion.eleve')),
            ],
            options={
                'ordering': ['-annee_scolaire', 'eleve__nom'],
                'unique_together': {('eleve', 'annee_scolaire')},
            },
        ),
    ]
